@mixin media-breakpoint($value, $size) {
  @if ($size == 0) {
    @content;
  }

  @else {
    @media ($value: $size) {
      @content;
    }
  }
}

@mixin header($fs, $lh, $mfs: $fs, $mlh: $lh) {
  font-size: $fs;
  line-height: $lh;

  @include media-breakpoint(max-width, 767px) {
    font-size: $mfs;
    line-height: $mlh;
  }
}

@mixin make-grid-row($gutters: $grid-gutter-width-base) {
  .row {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
  }
}

@mixin make-grid-columns($columns: $grid-columns, $gutters: $grid-gutter-width-base, $breakpoints: $grid-breakpoints) {
  %grid-column {
    position: relative;

    padding-right: #{$gutters};
  }

  $max-width: 100%;

  @each $breakpoint, $size in $breakpoints {
    @for $i from 1 through $columns {
      .col-#{$breakpoint}-#{$i} {
        @extend %grid-column;
      }
    }
  }

  @each $breakpoint, $size in $breakpoints {
    @include media-breakpoint(max-width, $size) {
      @for $i from 1 through $columns {
        .col-#{$breakpoint}-#{$i} {
          flex: 0 0 #{get-width($max-width, $i)};
          max-width: #{get-width($max-width, $i)};

          &:nth-child(#{$i}) {
            padding-right: 0;
          }
        }
      }
    }
  }
}

@mixin placeholder($color: $white) {
  &::-webkit-input-placeholder {
    color: $color;
  }

  &::-ms-input-placeholder {
    color: $color;
  }

  &::-moz-placeholder {
    color: $color;
  }

  &:-moz-placeholder {
    color: $color;
  }

  &:-ms-input-placeholder {
    color: $color;
  }

  &::placeholder {
    color: $color;
  }
}
